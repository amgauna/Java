<HTML>
<BODY>

<A NAME="properties"><H1>Properties</H1></A>

<P>The following properties are available in JavaScript:
<TABLE width=70%>
<TR VALIGN=TOP>
<TD>
<LI><A HREF=#action_property>action</A>
<LI><A HREF=#alinkColor_property>alinkColor</A>
<LI><A HREF=#anchors_property>anchors</A>
<LI><A HREF=#appCodeName_property>appCodeName</A>
<LI><A HREF=#appName_property>appName</A>
<LI><A HREF=#appVersion_property>appVersion</A>
<LI><A HREF=#bgColor_property>bgColor</A>
<LI><A HREF=#checked_property>checked</A>
<LI><A HREF=#cookie_property>cookie</A>
<LI><A HREF=#defaultChecked_property>defaultChecked</A>
<LI><A HREF=#defaultSelected_property>defaultSelected</A>
<LI><A HREF=#defaultStatus_property>defaultStatus</A>
<LI><A HREF=#defaultValue_property>defaultValue</A>
<LI><A HREF=#E_property>E</A>
<LI><A HREF=#elements_property>elements</A>
<LI><A HREF=#encoding_property>encoding</A>
<LI><A HREF=#fgColor_property>fgColor</A>
<LI><A HREF=#forms_property>forms</A>
<LI><A HREF=#frames_property>frames</A>
</TD>
<TD>
<LI><A HREF=#hash_property>hash</A>
<LI><A HREF=#host_property>host</A>
<LI><A HREF=#hostname_property>hostname</A>
<LI><A HREF=#href_property>href</A>
<LI><A HREF=#index_property>index</A>
<LI><A HREF=#lastModified_property>lastModified</A>
<LI><A HREF=#length_property>length</A>
<LI><A HREF=#linkColor_property>linkColor</A>
<LI><A HREF=#links_property>links</A>
<LI><A HREF=#LN2_property>LN2</A>
<LI><A HREF=#LN10_property>LN10</A>
<LI><A HREF=#location_property>location</A>
<LI><A HREF=#LOG2E_property>LOG2E</A>
<LI><A HREF=#LOG10E_property>LOG10E</A>
<LI><A HREF=#method_property>method</A>
<LI><A HREF=#name_property>name</A>
<LI><A HREF=#options_property>options</A>
<LI><A HREF=#parent_property>parent</A>
<LI><A HREF=#pathname_property>pathname</A>
</TD>
<TD>
<LI><A HREF=#PI_property>PI</A>
<LI><A HREF=#port_property>port</A>
<LI><A HREF=#protocol_property>protocol</A>
<LI><A HREF=#referrer_property>referrer</A>
<LI><A HREF=#search_property>search</A>
<LI><A HREF=#selected_property>selected</A>
<LI><A HREF=#selectedIndex_property>selectedIndex</A>
<LI><A HREF=#self_property>self</A>
<LI><A HREF=#SQRT1_2_property>SQRT1_2</A>
<LI><A HREF=#SQRT2_property>SQRT2</A>
<LI><A HREF=#status_property>status</A>
<LI><A HREF=#target_property>target</A>
<LI><A HREF=#text_property>text</A>
<LI><A HREF=#title_property>title</A>
<LI><A HREF=#top_property>top</A>
<LI><A HREF=#userAgent_property>userAgent</A>
<LI><A HREF=#value_property>value</A>
<LI><A HREF=#vlinkColor_property>vlinkColor</A>
<LI><A HREF=#window_property>window</A>
</TD>
</TR>
</TABLE>


<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="action_property"><H2>action property</H2></A>
<P>
A string specifying a destination URL for form data that is submitted.

<H3>Syntax</H3>
<PRE><I>formName</I>.action</PRE>
<P><I>formName</I> is either the name of a form or an element in the <I>forms</I> array.

<H3>Description</H3>
<P>The action property is a reflection of the ACTION attribute of the &ltFORM&gt tag. Each section of a URL contains different information. See the <A HREF=objects.htm#location_object>location</A> object for a description of the URL components.

<P>You can set the action property at any time.


<P>Certain values of the action property may require specific values for other form properties. See <A HREF="http://www.ics.uci.edu/pub/ietf/html/rfc1867.txt" TARGET="_top">RFC 1867</A> for more information.

<H3>Property of</H3>
<P><A HREF=objects.htm#form_object>form</A>

<H3>Examples</H3>
<P>The following example sets the action property of the <I>musicForm</I> form to the value of the variable <I>urlName</I>:
<PRE>document.musicForm.action=urlName</PRE>

<H3>See also</H3>
<LI><A HREF=#encoding_property>encoding</A>, <A HREF=#method_property>method</A>, <A HREF=#target_property>target</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="alinkColor_property"><H2>alinkColor property</H2></A>
<P>
A string specifying the color of an active link (after mouse-button down, but before mouse-button up).

<H3>Syntax</H3>
<PRE>document.alinkColor</PRE>

<H3>Description</H3>
<P>
The alinkColor property is expressed as a hexadecimal RGB triplet or as one of the string literals listed in <A HREF=colors.htm>Color Values</A>. This property is the JavaScript reflection of the ALINK attribute of the &ltBODY&gt tag. You cannot set this property after the HTML source has been through layout.

<P>If you express the color as a hexadecimal RGB triplet, you must use the format rrggbb. For example, the hexadecimal RGB values for salmon are red=FA, green=80, and blue=72, so the RGB triplet for salmon is "FA8072".

<H3>Property of</H3>
<P><A HREF=objects.htm#document_object>document</A>

<H3>Examples</H3>
<P>The following example sets the color of active links to aqua using a string literal:
<PRE>
document.alinkColor="aqua"
</PRE>
<P>The following example sets the color of active links to aqua using a hexadecimal triplet:
<PRE>
document.alinkColor="00FFFF"
</PRE>

<H3>See also</H3>
<LI><A HREF=#bgColor_property>bgColor</A>, <A HREF=#fgColor_property>fgColor</A>, <A HREF=#linkColor_property>linkColor</A>, and <A HREF=#vlinkColor_property>vlinkColor</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="anchors_property"><H2>anchors property</H2></A>
<P>An array of objects corresponding to named anchors in source order. See <A HREF=objects.htm#anchor_object>anchor</A> object.

<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="appCodeName_property"><H2>appCodeName property</H2></A>
<P>A string specifying the code name of the browser.

<H3>Syntax</H3>
<PRE>navigator.appCodeName</PRE>

<H3>Description</H3>
<P>appCodeName is a read-only property.

<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#navigator_object>navigator</A>

<H3>Examples</H3>
<P>The following example displays the value of the appCodeName property:
<PRE>document.write("The value of navigator.appCodeName is " +
   navigator.appCodeName)</PRE>
<P>For Navigator 2.0, this displays the following:
<PRE>The value of navigator.appCodeName is Mozilla</PRE>


<H3>See also</H3>
<LI><A HREF=#appName_property>appName</A>, <A HREF=#appVersion_property>appVersion</A>, <A HREF=#userAgent_property>userAgent</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="appName_property"><H2>appName property</H2></A>
<P>
A string specifying the name of the browser.

<H3>Syntax</H3>
<PRE>navigator.appName</PRE>

<H3>Description</H3>
<P>appName is a read-only property.

<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#navigator_object>navigator</A>

<H3>Examples</H3>
<P>The following example displays the value of the appName property:
<PRE>document.write("The value of navigator.appName is " +
   navigator.appName)</PRE>
<P>For Navigator 2.0, this displays the following:
<PRE>The value of navigator.appName is Netscape</PRE>

<H3>See also</H3>
<LI><A HREF=#appVersion_property>appVersion</A>, <A HREF=#appCodeName_property>appCodeName</A>, <A HREF=#userAgent_property>userAgent</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="appVersion_property"><H2>appVersion property</H2></A>
<P>
A string specifying version information for the Navigator.

<H3>Syntax</H3>
<PRE>navigator.appVersion</PRE>

<H3>Description</H3>
<P>The appVersion property specifies version information in the following format:
<P><I>releaseNumber</I> (<I>platform</I>; <I>country</I>)
<P>The values contained in this format are the following:
<LI><I>releaseNumber</I> is the version number of the Navigator. For example, "2.0b4" specifies Navigator 2.0, beta 4.
<LI><I>platform</I> is the platform upon which the Navigator is running. For example, "Win16" specifies a 16-bit version of Windows such as Windows 3.11.
<LI><I>country</I> is either "I" for the international release, or "U" for the domestic U.S. release. The domestic release has a stronger encryption feature than the international release.
<P>appVersion is a read-only property.

<H3>Property of</H3>
<P><A HREF=objects.htm#navigator_object>navigator</A>

<H3>Examples</H3>
<P><B>Example 1.</B> The following example displays version information for the Navigator:
<PRE>document.write("The value of navigator.appVersion is " +
   navigator.appVersion)</PRE>
<P>For Navigator 2.0 on Windows 95, this displays the following:
<PRE>The value of navigator.appVersion is 2.0 (Win95, I)</PRE>

<P><B>Example 2.</B> The following example populates a textarea object with newline characters separating each line. Because the newline character varies from platform to platform, the example tests the appVersion property to determine whether the user is running Windows (appVersion contains "Win" for all versions of Windows). If the user is running Windows, the newline character is set to \r\n; otherwise, it's set to \n, which is the newline character for Unix and Macintosh.

<XMP>
<SCRIPT>
var newline=null
function populate(textareaObject){
   if (navigator.appVersion.lastIndexOf('Win') != -1)
      newline="\r\n"
      else newline="\n"
   textareaObject.value="line 1" + newline + "line 2" + newline + "line 3"
}
</SCRIPT>
<FORM NAME="form1">
<BR><TEXTAREA NAME="testLines" ROWS=8 COLS=55></TEXTAREA>
<P><INPUT TYPE="button" VALUE="Populate the textarea object"
   onClick="populate(document.form1.testLines)">
</TEXTAREA>
</FORM>
</XMP>

<H3>See also</H3>
<LI><A HREF=#appName_property>appName</A>, <A HREF=#appCodeName_property>appCodeName</A>, <A HREF=#userAgent_property>userAgent</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="bgColor_property"><H2>bgColor property</H2></A>
<P>
A string specifying the color of the document background.

<H3>Syntax</H3>
<PRE>document.bgColor</PRE>

<H3>Description</H3>
<P>The bgColor property is expressed as a hexadecimal RGB triplet or as one of the string literals listed in <A HREF=colors.htm>Color Values</A>. This property is the JavaScript reflection of the BGCOLOR attribute of the &ltBODY&gt tag. The default value of this property is set by the user on the Colors tab of the Preferences dialog box, which is displayed by choosing General Preferences from the Options menu.

<P>You can set the bgColor property at any time.

<P>If you express the color as a hexadecimal RGB triplet, you must use the format rrggbb. For example, the hexadecimal RGB values for salmon are red=FA, green=80, and blue=72, so the RGB triplet for salmon is "FA8072".

<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#document_object>document</A>

<H3>Examples</H3>
<P>The following example sets the color of the document background to aqua using a string literal:
<PRE>
document.bgColor="aqua"
</PRE>

<P>The following example sets the color of the document background to aqua using a hexadecimal triplet:
<PRE>
document.bgColor="00FFFF"
</PRE>

<H3>See also</H3>
<LI><A HREF=#alinkColor_property>alinkColor</A>, <A HREF=#fgColor_property>fgColor</A>, <A HREF=#linkColor_property>linkColor</A>, and <A HREF=#vlinkColor_property>vlinkColor</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="checked_property"><H2>checked property</H2></A>
<P>
A Boolean value specifying the selection state of a checkbox object or radio button.

<H3>Syntax</H3>
<PRE>
1. <I>checkboxName</I>.checked
2. <I>radioName</I>[<I>index</I>].checked
</PRE>
<P><I>checkboxName</I> is either the value of the NAME attribute of a checkbox object or an element in the <I>elements</I> array.
<BR><I>radioName</I> is the value of the NAME attribute of a radio object.
<BR><I>index</I> is an integer representing a radio button in a radio object.

<H3>Description</H3>
<P>If a checkbox or radio button is selected, the value of its checked property is true; otherwise, it is false.

<P>You can set the checked property at any time. The display of the checkbox or radio button updates immediately when you set the checked property.

<H3>Property of</H3>
<P><A HREF=objects.htm#checkbox_object>checkbox</A>, <A HREF=objects.htm#radio_object>radio</A>

<H3>Examples</H3>
<P>The following example examines an array of radio buttons called <I>musicType</I> on the <I>musicForm</I> form to determine which button is selected. The VALUE attribute of the selected button is assigned to the <I>checkedButton</I> variable.
<PRE>
function stateChecker() {
   var checkedButton = ""
   for (var i in document.musicForm.musicType) {
      if (document.musicForm.musicType[i].checked=="1") {
         checkedButton=document.musicForm.musicType[i].value
      }
   }
}
</PRE>

<H3>See also</H3>
<LI><A HREF=#defaultChecked_property>defaultChecked</A> property
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="cookie_property"><H2>cookie property</H2></A>
<P>
String value of a cookie, which is a small piece of information stored by the Navigator in the cookies.txt file. 

<H3>Syntax</H3>
<PRE>document.cookie</PRE>

<H3>Description</H3>
<P>Use string methods such as substring, charAt, indexOf, and lastIndexOf to determine the value stored in the cookie. See the <A HREF="http://home.netscape.com/newsref/std/cookie_spec.htm" TARGET="_top">Netscape cookie specification</A> for a complete specification of the cookie syntax.

<P>You can set the cookie property at any time.

<H3>Property of</H3>
<P><A HREF=objects.htm#document_object>document</A>

<H3>Examples</H3>
<P>The following function uses the cookie property to record a reminder for users of an application. The "expires=" component sets an expiration date for the cookie, so it persists beyond the current browser session.
<PRE>
function RecordReminder(time, expression) {
   // Record a cookie of the form "@&ltT&gt=&ltE&gt" to map
   // from &ltT&gt in milliseconds since the epoch,
   //  returned by Date.getTime(), onto an encoded expression,
   // &ltE&gt (encoded to contain no white space, semicolon,
   // or comma characters)
   document.cookie = "@" + time + "=" + expression + ";"
   // set the cookie expiration time to one day
   // beyond the reminder time
   document.cookie += "expires=" + Date(time + 24*60*60*1000)
}
</PRE>
<P>When the user loads the page that contains this function, another function uses indexOf("@") and indexOf("=") to determine the date and time stored in the cookie.

<H3>See also</H3>
<LI><A HREF=objects.htm#hidden_object>hidden</A> object

<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="defaultChecked_property"><H2>defaultChecked property</H2></A>
<P>
A Boolean value indicating the default selection state of a checkbox or radio button.

<H3>Syntax</H3>
<PRE>
1. <I>checkboxName</I>.defaultChecked
2. <I>radioName</I>[<I>index</I>].defaultChecked
</PRE>
<P><I>checkboxName</I> is either the value of the NAME attribute of a checkbox object or an element in the <I>elements</I> array.
<BR><I>radioName</I> is the value of the NAME attribute of a radio object.
<BR><I>index</I> is an integer representing a radio button in a radio object.

<H3>Description</H3>
<P>If an checkbox or radio button is selected by default, the value of the defaultChecked property is true; otherwise, it is false. defaultChecked initially reflects whether the CHECKED attribute is used within an &ltINPUT&gt tag; however, setting defaultChecked overrides the CHECKED attribute.

<P>You can set the defaultChecked property at any time. The display of the checkbox or radio button does not update when you set the defaultChecked property, only when you set the checked property.

<H3>Property of</H3>
<P><A HREF=objects.htm#checkbox_object>checkbox</A>, <A HREF=objects.htm#radio_object>radio</A>

<H3>Examples</H3>
<P>The following example resets an array of radio buttons called <I>musicType</I> on the <I>musicForm</I> form to the default selection state.

<PRE>
function radioResetter() {
   var i=""
   for (i in document.musicForm.musicType) {
      if (document.musicForm.musicType[i].defaultChecked==true) {
         document.musicForm.musicType[i].checked=true
      }
   }
}
</PRE>

<H3>See also</H3>
<LI><A HREF=#checked_property>checked</A> property
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="defaultSelected_property"><H2>defaultSelected property</H2></A>
<P>
A Boolean value indicating the default selection state of an option in a select object.

<H3>Syntax</H3>
<PRE><I>selectName</I>.options[<I>index</I>].defaultSelected</PRE>
<P><I>selectName</I> is either the value of the NAME attribute of a select object or an element in the <I>elements</I> array.
<BR><I>index</I> is an integer representing an option in a select object.

<H3>Description</H3>
<P>If an option in a select object is selected by default, the value of the defaultSelected property is true; otherwise, it is false. defaultSelected initially reflects whether the SELECTED attribute is used within an &ltOPTION&gt tag; however, setting defaultSelected overrides the SELECTED attribute.

<P>You can set the defaultSelected property at any time. The display of the select object does not update when you set the defaultSelected property, only when you set the selected or selectedIndex properties.

<P>A select object created without the MULTIPLE attribute can have only one option selected by default. When you set defaultSelected in such an object, any previous default selections, including defaults set with the SELECTED attribute, are cleared. If you set defaultSelected in a select object created with the MULTIPLE attribute, previous default selections are not affected.

<H3>Property of</H3>
<P><A HREF=objects.htm#select_object>options</A> array

<H3>Examples</H3>
<P>In the following example, the <I>restoreDefault()</I> function returns the <I>musicType</I> select object to its default state. The <B>for</B> loop uses the options array to evaluate every option in the select object. The <B>if</B> statement sets the selected property if defaultSelected is true.
<PRE>
function restoreDefault() {
   for (var i = 0; i < document.musicForm.musicType.length; i++) {
      if (document.musicForm.musicType.options[i].defaultSelected == true) {
         document.musicForm.musicType.options[i].selected=true
      }
   }
}
</PRE>
The previous example assumes that the select object is similar to the following:
<PRE>
&ltSELECT NAME="musicType"&gt 
   &ltOPTION SELECTED&gt R&B
   &ltOPTION&gt Jazz
   &ltOPTION&gt Blues
   &ltOPTION&gt New Age
&lt/SELECT&gt
</PRE>

<H3>See also</H3>
<LI><A HREF=#index_property>index</A>, <A HREF=#selected_property>selected</A>, <A HREF=#selectedIndex_property>selectedIndex</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="defaultStatus_property"><H2>defaultStatus property</H2></A>
<P>
The default message displayed in the status bar at the bottom of the window.

<H3>Syntax</H3>
<PRE><I>windowReference</I>.defaultStatus</PRE>
<P><I>windowReference</I> is a valid way of referring to a window, as described in the <A HREF=objects.htm#window_object>window</A> object.

<H3>Description</H3>
<P>The defaultStatus message appears when nothing else is in the status bar. Do not confuse the defaultStatus property with the status property. The status property reflects a priority or transient message in the status bar, such as the message that appears when a mouseOver event occurs over an anchor.

<P>You can set the defaultStatus property at any time. You must return true if you want to set the defaultStatus property in the onMouseOver event handler.


<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#window_object>window</A>

<H3>Examples</H3>
<P>In the following example, the <I>statusSetter()</I> function sets both the status and defaultStatus properties in an onMouseOver event handler:

<PRE>
function statusSetter() {
   window.defaultStatus = "Click the link for the Netscape home page"
   window.status = "Netscape home page"
}

&ltA HREF="http://www.netscape.com"
   onMouseOver = "statusSetter(); return true"&gtNetscape&lt/A&gt
</PRE>

In the previous example, notice that the onMouseOver event handler returns a value of true. You must return true to set status or defaultStatus in an event handler.

<H3>See also</H3>
<LI><A HREF=#status_property>status</A> property
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="defaultValue_property"><H2>defaultValue property</H2></A>
<P>
A string indicating the default value of a password, text, or textarea object.

<H3>Syntax</H3>
<PRE>
1. <I>passwordName</I>.defaultValue
2. <I>textName</I>.defaultValue
3. <I>textareaName</I>.defaultValue
</PRE>
<P><I>passwordName</I> is either the value of the NAME attribute of a password object or an element in the <I>elements</I> array.
<BR><I>textName</I> is either the value of the NAME attribute of a text object or an element in the <I>elements</I> array.
<BR><I>textareaName</I> is either the value of the NAME attribute of a textarea object or an element in the <I>elements</I> array.

<H3>Description</H3>
<P>The initial value of defaultValue differs for each object:
<LI>For text objects, it initially reflects the value of the VALUE attribute.
<LI>For textarea objects, it initially reflects the value specified between the &ltTEXTAREA&gt and &lt/TEXTAREA&gt tags.
<LI>For password objects, it initially is null (for security reasons), regardless of the value of the VALUE attribute.

<P>Setting defaultValue programatically overrides the initial setting. If you programatically set defaultValue for the password object and then evaluate it, JavaScript returns the current value.

<P>You can set the defaultValue property at any time. The display of the related object does not update when you set the defaultValue property, only when you set the value property.

<H3>Property of</H3>
<P><A HREF=objects.htm#hidden_object>hidden</A>, <A HREF=objects.htm#password_object>password</A>, <A HREF=objects.htm#text_object>text</A>, <A HREF=objects.htm#textarea_object>textarea</A>

<H3>Examples</H3>
<P>The following function evaluates the defaultValue property of objects on the <I>surfCity</I> form and displays the values in the <I>msgWindow</I> window:
<PRE>
function defaultGetter() {
   msgWindow=window.open("")
   msgWindow.document.write("hidden.defaultValue is " +
      document.surfCity.hiddenObj.defaultValue + "&ltBR&gt")
   msgWindow.document.write("password.defaultValue is " +
      document.surfCity.passwordObj.defaultValue + "&ltBR&gt")
   msgWindow.document.write("text.defaultValue is " +
      document.surfCity.textObj.defaultValue + "&ltBR&gt")
   msgWindow.document.write("textarea.defaultValue is " +
      document.surfCity.textareaObj.defaultValue + "&ltBR&gt")
   msgWindow.document.close()
}
</PRE>

<H3>See also</H3>
<LI><A HREF=#value_property>value</A> property
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="E_property"><H2>E property</H2></A>
<P>
Euler's constant and the base of natural logarithms, approximately 2.718.

<H3>Syntax</H3>
<PRE>Math.E</PRE>

<H3>Description</H3>
<P>Because E is a constant, it is a read-only property of Math.

<H3>Property of</H3>
<P><A HREF=objects.htm#Math_object>Math</A>

<H3>Examples</H3>
<P>The following example displays Euler's constant:
<PRE>document.write("Euler's constant is " + Math.E)</PRE>

<H3>See also</H3>
<LI><A HREF=#LN2_property>LN2</A>, <A HREF=#LN10_property>LN10</A>, <A HREF=#LOG2E_property>LOG2E</A>, <A HREF=#LOG10E_property>LOG10E</A>, <A HREF=#PI_property>PI</A>, <A HREF=#SQRT1_2_property>SQRT1_2</A>, <A HREF=#SQRT2_property>SQRT2</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="elements_property"><H2>elements property</H2></A>
<P>An array of objects corresponding to form elements (such as checkbox, radio, and text objects) in source order. See <A HREF=objects.htm#elements_object><I>elements</I></A> array.

<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="encoding_property"><H2>encoding property</H2></A>
<P>
A string specifying the MIME encoding of the form.

<H3>Syntax</H3>
<PRE><I>formName</I>.encoding</PRE>
<P><I>formName</I> is either the name of a form or an element in the <I>forms</I> array.

<H3>Description</H3>
<P>The encoding property initially reflects the ENCTYPE attribute of the &ltFORM&gt tag; however, setting encoding overrides the ENCTYPE attribute.

<P>You can set the encoding property at any time.

<P>Certain values of the encoding property may require specific values for other form properties. See <A HREF="http://www.ics.uci.edu/pub/ietf/html/rfc1867.txt" TARGET="_top">RFC 1867</A> for more information.

<H3>Property of</H3>
<P><A HREF=objects.htm#form_object>form</A>

<H3>Examples</H3>
<P>The following function returns the value of the <I>musicForm</I> encoding property:
<PRE>
function getEncoding() {
   return document.musicForm.encoding
}
</PRE>

<H3>See also</H3>
<LI><A HREF=#action_property>action</A>, <A HREF=#method_property>method</A>, <A HREF=#target_property>target</A> properties

<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="fgColor_property"><H2>fgColor property</H2></A>
<P>
A string specifying the color of the document text.

<H3>Syntax</H3>
<PRE>document.fgColor</PRE>

<H3>Description</H3>
<P>The fgColor property is expressed as a hexadecimal RGB triplet or as one of the string literals listed in <A HREF=colors.htm>Color Values</A>. This property is the JavaScript reflection of the TEXT attribute of the &ltBODY&gt tag. The default value of this property is set by the user on the Colors tab of the Preferences dialog box, which is displayed by choosing General Preferences from the Options menu. You cannot set this property after the HTML source has been through layout.

<P>If you express the color as a hexadecimal RGB triplet, you must use the format rrggbb. For example, the hexadecimal RGB values for salmon are red=FA, green=80, and blue=72, so the RGB triplet for salmon is "FA8072".

<P>You can override the value set in the fgColor property in either of the following ways:
<LI>Setting the COLOR attribute of the &ltFONT&gt tag.
<LI>Using the fontcolor method.

<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#document_object>document</A>

<H3>Examples</H3>
<P>The following example sets the color of the foreground text to aqua using a string literal:
<PRE>
document.fgColor="aqua"
</PRE>
<P>The following example sets the color of the foreground text to aqua using a hexadecimal triplet:
<PRE>
document.fgColor="00FFFF"
</PRE>

<H3>See also</H3>
<LI><A HREF=#alinkColor_property>alinkColor</A>, <A HREF=#bgColor_property>bgColor</A>, <A HREF=#linkColor_property>linkColor</A>, and <A HREF=#vlinkColor_property>vlinkColor</A> properties
<LI><A HREF=methods.htm#fontcolor_method>fontcolor</A>
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="forms_property"><H2>forms property</H2></A>
<P>An array of objects corresponding to the forms (&ltFORM&gt tags) in a document in source order. See <A HREF=objects.htm#form_object>form</A> object.

<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="frames_property"><H2>frames property</H2></A>
<P>An array of objects corresponding to child frames (&ltFRAME&gt tag) in source order. See <A HREF=objects.htm#frame_object>frame</A> object.

<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="hash_property"><H2>hash property</H2></A>
<P>
A string beginning with a hash mark (#) that specifies an anchor name in the URL.

<H3>Syntax</H3>
<PRE>location.hash</PRE>

<H3>Description</H3>
<P>The hash property specifies a portion of the URL.

<P>You can set the hash property at any time, although it is safer to set the href property to change a location. If the hash that you specify cannot be found in the current location, you will get an error.

<P>See <A HREF="http://www.cis.ohio-state.edu/htbin/rfc/rfc1738.htm" TARGET="_top">RFC 1738</A> for complete information about the hash.

<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#link_object>link</A>, <A HREF=objects.htm#location_object>location</A>

<H3>Examples</H3>
<P>See the examples for the <A HREF=objects.htm#anchor_object>anchor</A> object and the <A HREF=#href_property>href</A> property.

<H3>See also</H3>
<LI><A HREF=#host_property>host</A>, <A HREF=#hostname_property>hostname</A>, <A HREF=#href_property>href</A>, <A HREF=#pathname_property>pathname</A>, <A HREF=#port_property>port</A>, <A HREF=#protocol_property>protocol</A>, <A HREF=#search_property>search</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="host_property"><H2>host property</H2></A>
<P>
A string specifying the hostname:port portion of the URL.

<H3>Syntax</H3>
<PRE>location.host</PRE>

<H3>Description</H3>
<P>The host property specifies a portion of the URL. The host property is the concatenation of the hostname and port properties, separated by a colon. When the port property is null, the host property is the same as the hostname property.

<P>You can set the host property at any time, although it is safer to set the href property to change a location. If the host that you specify cannot be found in the current location, you will get an error.

<P>See Section 3.1 of <A HREF="http://www.cis.ohio-state.edu/htbin/rfc/rfc1738.htm" TARGET="_top">RFC 1738</A> for complete information about the hostname and port.

<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#link_object>link</A>, <A HREF=objects.htm#location_object>location</A>

<H3>Examples</H3>
<P>See the examples for the <A HREF=#href_property>href</A> property.

<H3>See also</H3>
<LI><A HREF=#hash_property>hash</A>, <A HREF=#hostname_property>hostname</A>, <A HREF=#href_property>href</A>, <A HREF=#pathname_property>pathname</A>, <A HREF=#port_property>port</A>, <A HREF=#protocol_property>protocol</A>, <A HREF=#search_property>search</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="hostname_property"><H2>hostname property</H2></A>
<P>
A string specifying the host and domain name, or IP address, of a network host.

<H3>Syntax</H3>
<PRE>location.hostname</PRE>

<H3>Description</H3>
<P>The hostname property specifies a portion of the URL. The hostname property is a substring of the host property. The host property is the concatenation of the hostname and port properties, separated by a colon. When the port property is null, the host property is the same as the hostname property.

<P>You can set the hostname property at any time, although it is safer to set the href property to change a location. If the hostname that you specify cannot be found in the current location, you will get an error.

<P>See Section 3.1 of <A HREF="http://www.cis.ohio-state.edu/htbin/rfc/rfc1738.htm" TARGET="_top">RFC 1738</A> for complete information about the hostname.

<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#link_object>link</A>, <A HREF=objects.htm#location_object>location</A>

<H3>Examples</H3>
<P>See the examples for the <A HREF=#href_property>href</A> property.

<H3>See also</H3>
<LI><A HREF=#hash_property>hash</A>, <A HREF=#host_property>host</A>, <A HREF=#href_property>href</A>, <A HREF=#pathname_property>pathname</A>, <A HREF=#port_property>port</A>, <A HREF=#protocol_property>protocol</A>, <A HREF=#search_property>search</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="href_property"><H2>href property</H2></A>
<P>
A string specifying the entire URL.


<H3>Syntax</H3>
<PRE>location.href</PRE>

<H3>Description</H3>
<P>The href property specifies the entire URL. Other location object properties are substrings of the href property. You can set the href property at any time.

<P>See <A HREF="http://www.cis.ohio-state.edu/htbin/rfc/rfc1738.htm" TARGET="_top">RFC 1738</A> for complete information about the URL.

<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#link_object>link</A>, <A HREF=objects.htm#location_object>location</A>

<H3>Examples</H3>
<P>In the following example, the <TT>window.open</TT> statement creates a window called <I>newWindow</I> and loads the specified URL into it. The <TT>document.write</TT> statements display all the properties of <TT>newWindow.location</TT> in a window called <I>msgWindow</I>.
<PRE>
newWindow=window.open
   ("http://home.netscape.com/comprod/products/navigator/
   version_2.0/script/script_info/objects.htm#checkbox_object")

msgWindow.document.write("newWindow.location.href = " +
   newWindow.location.href + "&ltP&gt")
msgWindow.document.write("newWindow.location.protocol = " +
   newWindow.location.protocol + "&ltP&gt")
msgWindow.document.write("newWindow.location.host = " +
   newWindow.location.host + "&ltP&gt")
msgWindow.document.write("newWindow.location.hostName = " +
   newWindow.location.hostName + "&ltP&gt")
msgWindow.document.write("newWindow.location.port = " +
   newWindow.location.port + "&ltP&gt")
msgWindow.document.write("newWindow.location.pathname = " +
   newWindow.location.pathname + "&ltP&gt")
msgWindow.document.write("newWindow.location.search = " +
   newWindow.location.search + "&ltP&gt")
msgWindow.document.write("newWindow.location.hash = " +
   newWindow.location.hash + "&ltP&gt")
msgWindow.document.close()
</PRE>

<P>The previous example displays output such as the following:
<PRE>
newWindow.location.href =
   http://home.netscape.com/comprod/products/navigator/
   version_2.0/script/script_info/objects.htm#checkbox_object
newWindow.location.protocol = http:
newWindow.location.host = home.netscape.com
newWindow.location.hostName = home.netscape.com
newWindow.location.port = 
newWindow.location.pathname =
   /comprod/products/navigator/version_2.0/script/
   script_info/objects.htm
newWindow.location.search = 
newWindow.location.hash = #checkbox_object
</PRE>

<H3>See also</H3>
<LI><A HREF=#hash_property>hash</A>, <A HREF=#host_property>host</A>, <A HREF=#hostname_property>hostname</A>, <A HREF=#pathname_property>pathname</A>, <A HREF=#port_property>port</A>, <A HREF=#protocol_property>protocol</A>, <A HREF=#search_property>search</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="index_property"><H2>index property</H2></A>
<P>
An integer representing the index of an option in a select object.

<H3>Syntax</H3>
<PRE>
<I>selectName</I>.options[<I>indexValue</I>].index
</PRE>
<P><I>selectName</I> is either the value of the NAME attribute of a select object or an element in the <I>elements</I> array.
<BR><I>indexValue</I> is an integer representing an option in a select object.

<H3>Description</H3>
<P>The number identifying the position of the option in the selection, starting from zero.

<H3>Property of</H3>
<P><A HREF=objects.htm#select_object>options</A> array

<H3>See also</H3>
<LI><A HREF=#defaultSelected_property>defaultSelected</A>, <A HREF=#selected_property>selected</A>, <A HREF=#selectedIndex_property>selectedIndex</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="lastModified_property"><H2>lastModified property</H2></A>
<P>
A string representing the date that a document was last modified.

<H3>Syntax</H3>
<PRE>document.lastModified</PRE>

<H3>Description</H3>
<P>lastModified is a read-only property.

<H3>Property of</H3>
<P><A HREF=objects.htm#document_object>document</A>

<H3>Examples</H3>
<P>In the following example, the lastModified property is used in a &ltSCRIPT&gt tag at the end of an HTML file to display the modification date of the page:
<PRE>
document.write("This page updated on " + document.lastModified)
</PRE>

<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="length_property"><H2>length property</H2></A>
<P>
An integer that specifies a length-related feature of the calling object or array.

<H3>Syntax</H3>
<P>When used with objects:
<PRE>
1. <I>formName</I>.length
2. <I>frameReference</I>.length
3. history.length
4. <I>radioName</I>.length
5. <I>selectName</I>.length
6. <I>stringName</I>.length
7. <I>windowReference</I>.length
</PRE>

<P>When used with array properties:
<PRE>
8. anchors.length
9. elements.length
10. forms.length
11. <I>frameReference</I>.frames.length
12. <I>windowReference</I>.frames.length
13. links.length
14. <I>selectName</I>.options.length
</PRE>

<P><I>formName</I> is either the name of a form or an element in the forms array.
<BR><I>frameReference</I> is either the value of the NAME attribute of a frame or an element in the <I>frames</I> array.
<BR><I>radioName</I> is either the value of the NAME attribute of a radio object or an element in the <I>elements</I> array.
<BR><I>selectName</I> is either the value of the NAME attribute of a select object or an element in the <I>elements</I> array.
<BR><I>stringName</I> is any string or a property of an existing object.
<BR><I>windowReference</I> is a valid way of referring to a window, as described in the <A HREF=objects.htm#window_object>window</A> object.

<H3>Description</H3>
<P>The length property is an integer that specifies one of the following:
<LI>The number of elements on a form (form 1 of the syntax).
<LI>The number of frames within a frame (form 2 of the syntax). A frame that does not load a document containing a &ltFRAMESET&gt tag always has a length of 0.
<LI>The number of entries in a history object (form 3 of the syntax).
<LI>The number of radio buttons in a radio object (form 4 of the syntax).
<LI>The number of options in a select object (form 5 of the syntax).
<LI>The length of a string object (form 6 of the syntax).
<LI>The number of frames in a parent window (form 7 of the syntax).
<LI>The number of entries in one of the array properties (all other syntax forms).

<P>length is always a read-only property.

<P>For a null string, length is zero. For a select object, the values returned by form 5 and form 14 of the syntax are the same. For a window containing frames, the values returned by form 7 and form 12 of the syntax are the same. For a form object, the values returned by form 1 and form 9 of the syntax are the same. For a frame containing frames, the values returned by form 2 and form 11 of the syntax are the same. 

<H3>Property of</H3>
<LI><A HREF=objects.htm#frame_object>frame</A>, <A HREF=objects.htm#history_object>history</A>, <A HREF=objects.htm#radio_object>radio</A>, <A HREF=objects.htm#select_object>select</A>, <A HREF=objects.htm#string_object>string</A>, <A HREF=objects.htm#window_object>window</A> objects
<LI><A HREF=objects.htm#anchor_object>anchors</A>, <A HREF=objects.htm#elements_object>elements</A>, <A HREF=objects.htm#form_object>forms</A>, <A HREF=objects.htm#frame_object>frames</A>, <A HREF=objects.htm#link_object>links</A>, <A HREF=objects.htm#select_object>options</A> arrays

<H3>Examples</H3>
<P>In the following example, the <I>getChoice()</I> function uses the length property to iterate over every element in the <I>musicType</I> array. <I>musicType</I> is a select element on the <I>musicForm</I> form.
<PRE>
function getChoice() {
   for (var i = 0; i < document.musicForm.musicType.length; i++) {
      if (document.musicForm.musicType.options[i].selected == true) {
         return document.musicForm.musicType.options[i].text
      }
   }
}
</PRE>

<P>The following example displays 8 in an alert dialog box:
<PRE>var x="Netscape"
alert("The string length is " + x.length)
</PRE>
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="linkColor_property"><H2>linkColor property</H2></A>
<P>
A string specifying the color of the document hyperlinks.

<H3>Syntax</H3>
<PRE>document.linkColor</PRE>

<H3>Description</H3>
<P>The linkColor property is expressed as a hexadecimal RGB triplet or as one of the string literals listed in <A HREF=colors.htm>Color Values</A>. This property is the JavaScript reflection of the LINK attribute of the &ltBODY&gt tag. The default value of this property is set by the user on the Colors tab of the Preferences dialog box, which is displayed by choosing General Preferences from the Options menu. You cannot set this property after the HTML source has been through layout.

<P>If you express the color as a hexadecimal RGB triplet, you must use the format rrggbb. For example, the hexadecimal RGB values for salmon are red=FA, green=80, and blue=72, so the RGB triplet for salmon is "FA8072".

<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#document_object>document</A>

<H3>Examples</H3>
<P>The following example sets the color of document links to aqua using a string literal:
<PRE>
document.linkColor="aqua"
</PRE>
<P>The following example sets the color of document links to aqua using a hexadecimal triplet:
<PRE>
document.linkColor="00FFFF"
</PRE>

<H3>See also</H3>
<LI><A HREF=#alinkColor_property>alinkColor</A>, <A HREF=#bgColor_property>bgColor</A>, <A HREF=#fgColor_property>fgColor</A>, and <A HREF=#vlinkColor_property>vlinkColor</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="links_property"><H2>links property</H2></A>
<P>An array of objects corresponding to link objects in source order. See <A HREF=objects.htm#link_object>link</A> object.

<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="LN2_property"><H2>LN2 property</H2></A>
<P>
The natural logarithm of two, approximately 0.693.

<H3>Syntax</H3>
<PRE>Math.LN2</PRE>

<H3>Description</H3>
<P>Because LN2 is a constant, it is a read-only property of Math.

<H3>Property of</H3>
<P><A HREF=objects.htm#Math_object>Math</A>

<H3>Examples</H3>
<P>The following example displays the natural log of 2:
<PRE>document.write("The natural log of 2 is " + Math.LN2)</PRE>

<H3>See also</H3>
<LI><A HREF=#E_property>E</A>, <A HREF=#LN10_property>LN10</A>, <A HREF=#LOG2E_property>LOG2E</A>, <A HREF=#LOG10E_property>LOG10E</A>, <A HREF=#PI_property>PI</A>, <A HREF=#SQRT1_2_property>SQRT1_2</A>, <A HREF=#SQRT2_property>SQRT2</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="LN10_property"><H2>LN10 property</H2></A>
<P>
The natural logarithm of ten, approximately 2.302.

<H3>Syntax</H3>
<PRE>Math.LN10</PRE>

<H3>Description</H3>
<P>Because LN10 is a constant, it is a read-only property of Math.

<H3>Property of</H3>
<P><A HREF=objects.htm#Math_object>Math</A>

<H3>Examples</H3>
<P>The following example displays the natural log of 10:
<PRE>document.write("The natural log of 10 is " + Math.LN10)</PRE>

<H3>See also</H3>
<LI><A HREF=#E_property>E</A>, <A HREF=#LN2_property>LN2</A>, <A HREF=#LOG2E_property>LOG2E</A>, <A HREF=#LOG10E_property>LOG10E</A>, <A HREF=#PI_property>PI</A>, <A HREF=#SQRT1_2_property>SQRT1_2</A>, <A HREF=#SQRT2_property>SQRT2</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="location_property"><H2>location property</H2></A>
<P>
A string specifying the complete URL of the document.

<H3>Syntax</H3>
<PRE>document.location</PRE>

<H3>Description</H3>
<P>Do not confuse the location property of the document object with the location object. You cannot change the value of the location property (<TT>document.location</TT>), but you can change the value of the location object's properties (<TT>window.location.<I>propertyName</I></TT>). <TT>document.location</TT> is a string-valued property that usually matches what <TT>window.location</TT> is set to when you load the document, but redirection may change it.

<P>location is a read-only property of document.

<H3>Property of</H3>
<P><A HREF=objects.htm#document_object>document</A>

<H3>Examples</H3>
<P>The following example displays the URL of the current document:
<PRE>
document.write("The current URL is " + document.location)
</PRE>

<H3>See also</H3>
<LI><A HREF=objects.htm#location_object>location</A> object
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="LOG2E_property"><H2>LOG2E property</H2></A>
<P>
The base 2 logarithm of e (approximately 1.442).

<H3>Syntax</H3>
<PRE>Math.LOG2E</PRE>

<H3>Description</H3>
<P>Because LOG2E is a constant, it is a read-only property of Math.

<H3>Property of</H3>
<P><A HREF=objects.htm#Math_object>Math</A>

<H3>Examples</H3>
<P>The following example displays the base 2 logarithm of E:
<PRE>document.write("The base 2 logarithm of E is " + Math.LOG2E)</PRE>

<H3>See also</H3>
<LI><A HREF=#E_property>E</A>, <A HREF=#LN2_property>LN2</A>, <A HREF=#LN10_property>LN10</A>, <A HREF=#LOG10E_property>LOG10E</A>,  <A HREF=#PI_property>PI</A>, <A HREF=#SQRT1_2_property>SQRT1_2</A>, <A HREF=#SQRT2_property>SQRT2</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="LOG10E_property"><H2>LOG10E property</H2></A>
<P>
The base 10 logarithm of e (approximately 0.434).

<H3>Syntax</H3>
<PRE>Math.LOG10E</PRE>

<H3>Description</H3>
<P>Because LOG10E is a constant, it is a read-only property of Math.

<H3>Property of</H3>
<P><A HREF=objects.htm#Math_object>Math</A>

<H3>Examples</H3>
<P>The following example displays the base 10 logarithm of E:
<PRE>document.write("The base 10 logarithm of E is " + Math.LOG10E)</PRE>

<H3>See also</H3>
<LI><A HREF=#E_property>E</A>, <A HREF=#LN2_property>LN2</A>, <A HREF=#LN10_property>LN10</A>, <A HREF=#LOG2E_property>LOG2E</A>, <A HREF=#PI_property>PI</A>, <A HREF=#SQRT1_2_property>SQRT1_2</A>, <A HREF=#SQRT2_property>SQRT2</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="method_property"><H2>method property</H2></A>
<P>
A string specifying how form field input information is sent to the server.

<H3>Syntax</H3>
<PRE><I>formName</I>.method</PRE>
<P><I>formName</I> is either the name of a form or an element in the <I>forms</I> array.

<H3>Description</H3>
<P>The method property is a reflection of the METHOD attribute of the &ltFORM&gt tag. The method property should evaluate to either "get" or "post".

<P>You can set the method property at any time.

<P>Certain values of the method property may require specific values for other form properties. See <A HREF="http://www.ics.uci.edu/pub/ietf/html/rfc1867.txt" TARGET="_top">RFC 1867</A> for more information.

<H3>Property of</H3>
<P><A HREF=objects.htm#form_object>form</A>

<H3>Examples</H3>
<P>The following function returns the value of the <I>musicForm</I> method property:
<PRE>
function getMethod() {
  return document.musicForm.method
}
</PRE>

<H3>See also</H3>
<LI><A HREF=#action_property>action</A>, <A HREF=#encoding_property>encoding</A>, <A HREF=#target_property>target</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="name_property"><H2>name property</H2></A>
<P>
A string specifying the name of an object.

<H3>Syntax</H3>
<PRE>
1. <I>objectName</I>.name
2. <I>frameReference</I>.name
3. <I>frameReference</I>.frames.name
4. <I>radioName</I>[<I>index</I>].name
5. <I>selectName</I>.options.name
6. <I>windowReference</I>.name
7. <I>windowReference</I>.frames.name
</PRE>

<P><I>objectName</I> is either the value of the NAME attribute of any of the objects listed below or an element in the <I>elements</I> array.
<BR><I>frameReference</I> is a valid way of referring to a frame, as described in the <A HREF=objects.htm#frame_object>frame</A> object.
<BR><I>radioName</I> is the value of the NAME attribute of a radio object.
<BR><I>selectName</I> is either the value of the NAME attribute of a select object or an element in the <I>elements</I> array.
<BR><I>windowReference</I> is a valid way of referring to a window, as described in the <A HREF=objects.htm#window_object>window</A> object.

<H3>Description</H3>
<P>The value of the name property differs between the window object and other objects.
<H4>window object</H4>
<P>The name property for the window object is represented by form 6 and form 7 of the syntax. The name property represents the value of the <I>windowName</I> argument described in the <A HREF=objects.htm#window_object>window</A> object syntax. Both forms of the syntax represent the same value.

<P>name is a read-only property.

<H4>All other objects</H4>
<P>The name property for all objects except window is represented by forms 1 through 5 of the syntax. For all objects except window, the name property initially reflects the value of the NAME attribute. Changing the name property overrides this setting.

<P>You can set the name property at any time.

<P>The name property is the same for every radio button in a single radio object. Individual radio buttons are referenced by their position in the radio array.

<P>Do not confuse the name property with the label displayed on a button, reset, or submit object. The value property specifies the label for these objects. The name property is not displayed onscreen; it is used to reference the objects programatically.

<P>For a select object, the values specified by form 1 and form 5 of the syntax are the same. For a frame object, the values specified by forms 1, 2, and 3 of the syntax are the same.

<P>If multiple objects on the same form have the same NAME attribute, an array of the given name is created automatically. Each element in the array represents an individual form object. Elements are indexed in source order starting at 0. For example, if two text elements and a textarea element on the same form have their NAME attribute set to "myField", an array with the elements myField[0], myField[1], and myField[2] is created.

<H3>Property of</H3>
<LI><A HREF=objects.htm#button_object>button</A>, <A HREF=objects.htm#checkbox_object>checkbox</A>, <A HREF=objects.htm#frame_object>frame</A>, <A HREF=objects.htm#hidden_object>hidden</A>, <A HREF=objects.htm#password_object>password</A>, <A HREF=objects.htm#radio_object>radio</A>, <A HREF=objects.htm#reset_object>reset</A>, <A HREF=objects.htm#select_object>select</A>, <A HREF=objects.htm#submit_object>submit</A>, <A HREF=objects.htm#text_object>text</A>, <A HREF=objects.htm#textarea_object>textarea</A>, <A HREF=objects.htm#window_object>window</A>
<LI><A HREF=objects.htm#select_object>options</A> array

<H3>Examples</H3>
<P>In the following example, the <I>valueGetter()</I> function uses a <B>for</B> loop to iterate over the array of elements on the <I>valueTest</I> form. The <I>msgWindow</I> window displays the names of all the elements on the form:

<PRE>
newWindow=window.open("http://www.netscape.com")

function valueGetter() {
   var msgWindow=window.open("")
   for (var i = 0; i < newWindow.document.valueTest.elements.length; i++) {
      msgWindow.document.write(newWindow.document.valueTest.elements[i].name + "&ltBR&gt")
   }
}
</PRE>

In the following example, the first statement creates a window called <I>netscapeWin</I>. The second statement displays the value "netscapeHomePage" in the alert dialog box, because "netscapeHomePage" is the value of the <I>windowName</I> argument of <I>netscapeWin</I>.
<PRE>
netscapeWin=window.open("http://www.netscape.com", "netscapeHomePage")

alert(netscapeWin.name)
</PRE>

<H3>See also</H3>
<P>For button, reset, and submit:
<LI><A HREF=#value_property>value</A> property

<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="options_property"><H2>options property</H2></A>
<P>An array corresponding to options in a select object (&ltOPTION&gt tags) in source order. See <A HREF=objects.htm#select_object>select</A> object.

<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="parent_property"><H2>parent property</H2></A>
<P>
The parent property is a synonym for a window whose frameset contains the current frame.

<H3>Syntax</H3>
<PRE>
1. parent.<I>propertyName</I>
2. parent.<I>methodName</I>
3. top.<I>frameName</I>
4. top.frames[<I>index</I>]
</PRE>
<P><I>propertyName</I> is the defaultStatus, status, length, name, or parent property when the calling parent refers to a window object.
<BR><I>propertyName</I> is the length, name, or parent property when the calling parent refers to a frame object.
<BR><I>methodName</I> is any method associated with the window object.
<BR><I>frameName</I> and frames[<I>index</I>] are ways to refer to frames.

<H3>Description</H3>

<P>The parent property refers to the &ltFRAMESET&gt window of a frame. Child frames within a frameset refer to sibling frames by using "parent" in place of the window name as follows: <TT>parent.<I>frameName</I></TT> or <TT>parent.frames[<I>index</I>]</TT>. For example, if the fourth frame in a set has NAME="homeFrame", sibling frames can refer to that frame using <TT>parent.homeFrame</TT> or <TT>parent.frames[3]</TT>.

<P>You can use <TT>parent.parent</TT> to refer to the "grandparent" frame or window when a &ltFRAMESET&gt tag is nested within a child frame.

<P>The parent property is read-only. The value of the parent property is 
<PRE>     &ltobject <I>nameAttribute</I>&gt</PRE>
where <I>nameAttribute</I> is the NAME attribute if the parent is a frame, or an internal reference if the parent is a window.

<H3>Property of</H3>
<P><A HREF=objects.htm#frame_object>frame</A>, <A HREF=objects.htm#window_object>window</A>

<H3>Examples</H3>
<P>See the examples for the <A HREF=objects.htm#frame_object>frame</A> object.
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="pathname_property"><H2>pathname property</H2></A>
<P>
A string specifying the url-path portion of the URL.

<H3>Syntax</H3>
<PRE>location.pathname</PRE>

<H3>Description</H3>
<P>The pathname property specifies a portion of the URL. The pathname supplies the details of how the specified resource can be accessed.

<P>You can set the pathname property at any time, although it is safer to set the href property to change a location. If the pathname that you specify cannot be found in the current location, you will get an error.

<P>See Section 3.1 of <A HREF="http://www.cis.ohio-state.edu/htbin/rfc/rfc1738.htm" TARGET="_top">RFC 1738</A> for complete information about the pathname.


<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#link_object>link</A>, <A HREF=objects.htm#location_object>location</A>

<H3>Examples</H3>
<P>See the examples for the <A HREF=#href_property>href</A> property.

<H3>See also</H3>
<LI><A HREF=#hash_property>hash</A>, <A HREF=#host_property>host</A>, <A HREF=#hostname_property>hostname</A>, <A HREF=#href_property>href</A>, <A HREF=#port_property>port</A>, <A HREF=#protocol_property>protocol</A>, <A HREF=#search_property>search</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="PI_property"><H2>PI property</H2></A>
<P>
The ratio of the circumference of a circle to its diameter, approximately 3.14159.

<H3>Syntax</H3>
<PRE>Math.PI</PRE>

<H3>Description</H3>
<P>Because PI is a constant, it is a read-only property of Math.

<H3>Property of</H3>
<P><A HREF=objects.htm#Math_object>Math</A>

<H3>Examples</H3>
<P>The following example displays the value of pi:
<PRE>document.write("The value of pi is " + Math.PI)</PRE>

<H3>See also</H3>
<LI><A HREF=#E_property>E</A>, <A HREF=#LN2_property>LN2</A>, <A HREF=#LN10_property>LN10</A>, <A HREF=#LOG2E_property>LOG2E</A>, <A HREF=#LOG10E_property>LOG10E</A>, <A HREF=#SQRT1_2_property>SQRT1_2</A>, <A HREF=#SQRT2_property>SQRT2</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="port_property"><H2>port property</H2></A>
<P>
A string specifying the communications port that the server uses for communications.

<H3>Syntax</H3>
<PRE>location.port</PRE>

<H3>Description</H3>
<P>The port property specifies a portion of the URL. The port property is a substring of the host property. The host property is the concatenation of the hostname and port properties, separated by a colon. When the port property is not defined, the host property is the same as the hostname property.

<P>You can set the port property at any time, although it is safer to set the href property to change a location. If the port that you specify cannot be found in the current location, you will get an error. If the port property is not specified, it defaults to 80 on the server.

<P>See Section 3.1 of <A HREF="http://www.cis.ohio-state.edu/htbin/rfc/rfc1738.htm" TARGET="_top">RFC 1738</A> for complete information about the port.

<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#link_object>link</A>, <A HREF=objects.htm#location_object>location</A>

<H3>Examples</H3>
<P>See the examples for the <A HREF=#href_property>href</A> property.

<H3>See also</H3>
<LI><A HREF=#hash_property>hash</A>, <A HREF=#host_property>host</A>, <A HREF=#hostname_property>hostname</A>, <A HREF=#href_property>href</A>, <A HREF=#pathname_property>pathname</A>, <A HREF=#protocol_property>protocol</A>, <A HREF=#search_property>search</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="protocol_property"><H2>protocol property</H2></A>
<P>
A string specifying the beginning of the URL, up to and including the first colon.

<H3>Syntax</H3>
<PRE>location.protocol</PRE>

<H3>Description</H3>
<P>The protocol property specifies a portion of the URL. The protocol indicates the access method of the URL. For example, a protocol of "http:" specifies Hypertext Transfer Protocol, and a protocol of "javascript:" specifies JavaScript code.

<P>You can set the protocol property at any time, although it is safer to set the href property to change a location. If the protocol that you specify cannot be found in the current location, you will get an error.

<P>The protocol property represents the scheme name of the URL. See Section 2.1 of <A HREF="http://www.cis.ohio-state.edu/htbin/rfc/rfc1738.htm" TARGET="_top">RFC 1738</A> for complete information about the protocol.


<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#link_object>link</A>, <A HREF=objects.htm#location_object>location</A>

<H3>Examples</H3>
<P>See the examples for the <A HREF=#href_property>href</A> property.

<H3>See also</H3>
<LI><A HREF=#hash_property>hash</A>, <A HREF=#host_property>host</A>, <A HREF=#hostname_property>hostname</A>, <A HREF=#href_property>href</A>, <A HREF=#pathname_property>pathname</A>, <A HREF=#port_property>port</A>, <A HREF=#search_property>search</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="referrer_property"><H2>referrer property</H2></A>
<P>
Specifies the URL of the calling document when a user clicks a link.

<H3>Syntax</H3>
<PRE>document.referrer</PRE>

<H3>Description</H3>
<P>When a user navigates to a <I>destination</I> document by clicking a link object on a <I>source</I> document, the referrer property contains the URL of the <I>source</I> document. Evaluate the referrer property from the <I>destination</I> document.

<P>referrer is a read-only property.

<H3>Property of</H3>
<P><A HREF=objects.htm#document_object>document</A>

<H3>Examples</H3>
<P>In the following example, the <I>getReferrer()</I> function is called from the <I>destination</I> document. It returns  the URL of the <I>source</I> document.
<PRE>
function getReferrer() {
   return document.referrer
}
</PRE>

<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="search_property"><H2>search property</H2></A>
<P>
A string beginning with a question mark that specifies any query information in the URL.

<H3>Syntax</H3>
<PRE>location.search</PRE>

<H3>Description</H3>
<P>The search property specifies a portion of the URL.

<P>You can set the search property at any time, although it is safer to set the href property to change a location. If the search that you specify cannot be found in the current location, you will get an error.

<P>See Section 3.3 of <A HREF="http://www.cis.ohio-state.edu/htbin/rfc/rfc1738.htm" TARGET="_top">RFC 1738</A> for complete information about the search.


<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#link_object>link</A>, <A HREF=objects.htm#location_object>location</A>

<H3>Examples</H3>
<P>In the following example, the <TT>window.open</TT> statement creates a window called <I>newWindow</I> and loads the specified URL into it. The <TT>document.write</TT> statements display all the properties of <TT>newWindow.location</TT> in a window called <I>msgWindow</I>.
<PRE>
newWindow=window.open
   ("http://guide-p.infoseek.com/WW/NS/Titles?qt=RFC+1738+&col=WW")

msgWindow.document.write("newWindow.location.href = " +
   newWindow.location.href + "&ltP&gt")
msgWindow.document.write("newWindow.location.protocol = " +
   newWindow.location.protocol + "&ltP&gt")
msgWindow.document.write("newWindow.location.host = " +
   newWindow.location.host + "&ltP&gt")
msgWindow.document.write("newWindow.location.hostName = " +
   newWindow.location.hostName + "&ltP&gt")
msgWindow.document.write("newWindow.location.port = " +
   newWindow.location.port + "&ltP&gt")
msgWindow.document.write("newWindow.location.pathname = " +
   newWindow.location.pathname + "&ltP&gt")
msgWindow.document.write("newWindow.location.search = " +
   newWindow.location.search + "&ltP&gt")
msgWindow.document.write("newWindow.location.hash = " +
   newWindow.location.hash + "&ltP&gt")
msgWindow.document.close()
</PRE>

<P>The previous example displays the following output:
<PRE>
newWindow.location.href =
   http://guide-p.infoseek.com/WW/NS/Titles?qt=RFC+1738+&col=WW
newWindow.location.protocol = http:
newWindow.location.host = guide-p.infoseek.com
newWindow.location.hostName = guide-p.infoseek.com
newWindow.location.port = 
newWindow.location.pathname = /WW/NS/Titles
newWindow.location.search = ?qt=RFC+1738+&col=WW
newWindow.location.hash = 
</PRE>

<H3>See also</H3>
<LI><A HREF=#hash_property>hash</A>, <A HREF=#host_property>host</A>, <A HREF=#hostname_property>hostname</A>, <A HREF=#href_property>href</A>, <A HREF=#pathname_property>pathname</A>, <A HREF=#port_property>port</A>, <A HREF=#protocol_property>protocol</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="selected_property"><H2>selected property</H2></A>
<P>
A Boolean value specifying the current selection state of an option in a select object.

<H3>Syntax</H3>
<PRE><I>selectName</I>.options[<I>index</I>].selected</PRE>
<P><I>selectName</I> is either the value of the NAME attribute of a select object or an element in the <I>elements</I> array.
<BR><I>index</I> is an integer representing an option in a select object.

<H3>Description</H3>
<P>If an option in a select object is selected, the value of its selected property is true; otherwise, it is false.

<P>You can set the selected property at any time. The display of the select object updates immediately when you set the selected property.

<P>In general, the selected property is more useful than the selectedIndex property for select objects that are created with the MULTIPLE attribute. With the selected property, you can evaluate every option in the <I>options</I> array to determine multiple selections, and you can select individual options without clearing the selection of other options.

<H3>Property of</H3>
<P><A HREF=objects.htm#select_object>options</A> array

<H3>Examples</H3>
<P>See the examples for the <A HREF=#defaultSelected_property>defaultSelected</A> property.

<H3>See also</H3>
<LI><A HREF=#defaultSelected_property>defaultSelected</A>, <A HREF=#index_property>index</A>, <A HREF=#selectedIndex_property>selectedIndex</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="selectedIndex_property"><H2>selectedIndex property</H2></A>
<P>
An integer specifying the index of the selected option in a select object.

<H3>Syntax</H3>
<PRE>
1. <I>selectName</I>.selectedIndex
2. <I>selectName</I>.options.selectedIndex
</PRE>
<P><I>selectName</I> is either the value of the NAME attribute of a select object or an element in the <I>elements</I> array.

<H3>Description</H3>
<P>Options in a select object are indexed in the order in which they are defined, starting with an index of 0. You can set the selectedIndex property at any time. The display of the select object updates immediately when you set the selectedIndex property. Both forms of the syntax specify the same value.

<P>In general, the selectedIndex property is more useful for select objects that are created without the MULTIPLE attribute. If you evaluate selectedIndex when multiple options are selected, the selectedIndex property specifies the index of the first option only. Setting selectedIndex clears any other options that are selected in the select object.

<P>The selected property of the select object's <I>options</I> array is more useful for select objects that are created with the MULTIPLE attribute. With the selected property, you can evaluate every option in the <I>options</I> array to determine multiple selections, and you can select individual options without clearing the selection of other options.

<H3>Property of</H3>
<LI><A HREF=objects.htm#select_object>select</A>
<LI><A HREF=objects.htm#select_object>options</A> array

<H3>Examples</H3>
<P>In the following example, the <I>getSelectedIndex()</I> function returns the selected index in the <I>musicType</I> select object:
<PRE>
function getSelectedIndex() {
   return document.musicForm.musicType.selectedIndex
}
</PRE>
The previous example assumes that the select object is similar to the following:
<PRE>
&ltSELECT NAME="musicType"&gt 
   &ltOPTION SELECTED&gt R&B
   &ltOPTION&gt Jazz
   &ltOPTION&gt Blues
   &ltOPTION&gt New Age
&lt/SELECT&gt
</PRE>

<H3>See also</H3>
<LI><A HREF=#defaultSelected_property>defaultSelected</A>, <A HREF=#index_property>index</A>, <A HREF=#selected_property>selected</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="self_property"><H2>self property</H2></A>
<P>
The self property is a synonym for the current window or frame.

<H3>Syntax</H3>
<PRE>
1. self.<I>propertyName</I>
2. self.<I>methodName</I>
</PRE>
<P><I>propertyName</I> is the defaultStatus, status, length, or name property when self refers to a window object.
<BR><I>propertyName</I> is the length or name property when self refers to a frame object.
<BR><I>methodName</I> is any method associated with the window object.

<H3>Description</H3>
<P>The self property refers to the current window or frame.

<P>Use the self property to disambiguate a window property from a form or form element of the same name. You can also use the self property to make your code more readable.

<P>The self property is read-only. The value of the self property is 
<PRE>     &ltobject <I>nameAttribute</I>&gt</PRE>
where <I>nameAttribute</I> is the NAME attribute if self refers to a frame, or an internal reference if self refers to a window.

<H3>Property of</H3>
<P><A HREF=objects.htm#frame_object>frame</A>, <A HREF=objects.htm#window_object>window</A>

<H3>Examples</H3>
<P>In the following example, <TT>self.status</TT> is used to set the status property of the current window. This usage disambiguates the status property of the current window from a form or form element called "status" within the current window.
<XMP><A HREF=""
   onClick="this.href=pickRandomURL()"
   onMouseOver="self.status='Pick a random URL' ; return true">
Go!</A></XMP>

<H3>See also</H3>
<LI><A HREF=#window_property>window</A> property
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="SQRT1_2_property"><H2>SQRT1_2 property</H2></A>
<P>
The square root of one-half; equivalently, one over the square root of two, approximately 0.707.

<H3>Syntax</H3>
<PRE>Math.SQRT1_2</PRE>

<H3>Description</H3>
<P>Because SQRT1_2 is a constant, it is a read-only property of Math.

<H3>Property of</H3>
<P><A HREF=objects.htm#Math_object>Math</A>

<H3>Examples</H3>
<P>The following example displays 1 over the square root of 2:
<PRE>document.write("1 over the square root of 2 is " + Math.SQRT1_2)</PRE>

<H3>See also</H3>
<LI><A HREF=#E_property>E</A>, <A HREF=#LN2_property>LN2</A>, <A HREF=#LN10_property>LN10</A>, <A HREF=#LOG2E_property>LOG2E</A>, <A HREF=#LOG10E_property>LOG10E</A>, <A HREF=#PI_property>PI</A>, <A HREF=#SQRT2_property>SQRT2</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="SQRT2_property"><H2>SQRT2 property</H2></A>
<P>
The square root of two, approximately 1.414.

<H3>Syntax</H3>
<PRE>Math.SQRT2</PRE>

<H3>Description</H3>
<P>Because SQRT2 is a constant, it is a read-only property of Math.

<H3>Property of</H3>
<P><A HREF=objects.htm#Math_object>Math</A>

<H3>Examples</H3>
<P>The following example displays the square root of 2:
<PRE>document.write("The square root of 2 is " + Math.SQRT2)</PRE>

<H3>See also</H3>
<LI><A HREF=#E_property>E</A>, <A HREF=#LN2_property>LN2</A>, <A HREF=#LN10_property>LN10</A>, <A HREF=#LOG2E_property>LOG2E</A>, <A HREF=#LOG10E_property>LOG10E</A>, <A HREF=#PI_property>PI</A>, <A HREF=#SQRT1_2_property>SQRT1_2</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="status_property"><H2>status property</H2></A>
<P>
Specifies a priority or transient message in the status bar at the bottom of the window, such as the message that appears when a mouseOver event occurs over an anchor.

<H3>Syntax</H3>
<PRE><I>windowReference</I>.status</PRE>
<P><I>windowReference</I> is a valid way of referring to a window, as described in the <A HREF=objects.htm#window_object>window</A> object.

<H3>Description</H3>
<P>Do not confuse the status property with the defaultStatus property. The defaultStatus property reflects the default message displayed in the status bar.

<P>You can set the status property at any time. You must return true if you want to set the status property in the onMouseOver event handler.

<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#window_object>window</A>

<H3>Examples</H3>
<P>
Suppose you have created a JavaScript function called pickRandomURL() that lets you select a URL at random. You can use the onClick event handler of an anchor to specify a value for the HREF attribute of the anchor dynamically, and the onMouseOver event handler to specify a custom message for the window in the status property:
<XMP><A HREF=""
   onClick="this.href=pickRandomURL()"
   onMouseOver="self.status='Pick a random URL'; return true">
Go!</A></XMP>
<P>In the above example, the status property of the window is assigned to the window's self property, as <TT>self.status</TT>. As this example shows, you must return true to set the status property in the onMouseOver event handler.

<H3>See also</H3>
<LI><A HREF=#defaultStatus_property>defaultStatus</A> property
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="target_property"><H2>target property</H2></A>
<P>
For form, a string specifying the name of the window that responses go to after a form has been submitted. For link, a string specifying the name of the window that displays the content of a clicked hypertext link.

<H3>Syntax</H3>
<PRE>
1. <I>formName</I>.target
2. <I>linkName</I>.target
</PRE>
<P><I>formName</I> is either the name of a form or an element in the <I>forms</I> array.
<BR><I>linkName</I> is an element in the <I>links</I> array.

<H3>Description</H3>
<P>The target property initially reflects the TARGET attribute of the &ltFORM&gt and &ltA&gt tags; however, setting target overrides these attributes.

<P>The target property cannot be assigned the value of a JavaScript expression or variable.

<P>You can set the target property at any time.

<P>Certain values of the target property may require specific values for other form properties. See <A HREF="http://www.ics.uci.edu/pub/ietf/html/rfc1867.txt" TARGET="_top">RFC 1867</A> for more information.

<H3>Property of</H3>
<P><A HREF=objects.htm#form_object>form</A>, <A HREF=objects.htm#link_object>link</A>, <A HREF=objects.htm#location_object>location</A>

<H3>Examples</H3>
<P>The following example specifies that responses to the <I>musicInfo</I> form are displayed in the "msgWindow" window:
<PRE>document.musicInfo.target="msgWindow"</PRE>

<H3>See also</H3>
<P>For form:
<LI><A HREF=#action_property>action</A>, <A HREF=#encoding_property>encoding</A>, <A HREF=#method_property>method</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="text_property"><H2>text property</H2></A>
<P>
A string specifying the text that follows an &ltOPTION&gt tag in a select object.

<H3>Syntax</H3>
<PRE><I>selectName</I>.options[<I>index</I>].text</PRE>
<P><I>selectName</I> is either the value of the NAME attribute of a select object or an element in the <I>elements</I> array.
<BR><I>index</I> is an integer representing an option in a select object.

<H3>Description</H3>
<P>The text property initially reflects the text that follows an &ltOPTION&gt tag in a select object.

<P>You can set the text property at any time; however, the following effects result:
<LI>The value of the property changes.
<LI>The text displayed by the option in the select object does not change.

<P>Be careful if you change the text property. If you evaluate the property after you change it, the property contains the new value, not the value that is displayed onscreen.

<H3>Property of</H3>
<P><A HREF=objects.htm#select_object>options</A> array

<H3>Examples</H3>
<P>In the following example, the <I>getChoice()</I> function returns the value of the text property for the selected option. The <B>for</B> loop evaluates every option in the <I>musicType</I> select object. The <B>if</B> statement finds the option that is selected.
<PRE>
function getChoice() {
   for (var i = 0; i < document.musicForm.musicType.length; i++) {
      if (document.musicForm.musicType.options[i].selected == true) {
         return document.musicForm.musicType.options[i].text
      }
   }
   return null
}
</PRE>
The previous example assumes that the select object is similar to the following:
<PRE>
&ltSELECT NAME="musicType"&gt 
   &ltOPTION SELECTED&gt R&B
   &ltOPTION&gt Jazz
   &ltOPTION&gt Blues
   &ltOPTION&gt New Age
&lt/SELECT&gt
</PRE>

<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="title_property"><H2>title property</H2></A>
<P>
A string representing the title of a document.

<H3>Syntax</H3>
<PRE>document.title</PRE>

<H3>Description</H3>
<P>The title property is a reflection of the value specified within the &ltTITLE&gt and &lt/TITLE&gt tags. If a document does not have a title, the title property is null.

<P>title is a read-only property.

<H3>Property of</H3>
<P><A HREF=objects.htm#document_object>document</A>

<H3>Examples</H3>
<P>In the following example, the value of the title property is assigned to a variable called <I>docTitle</I>:
<PRE>
var newWindow = window.open("http://www.netscape.com")
var docTitle = newWindow.document.title
</PRE>
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="top_property"><H2>top property</H2></A>
<P>
The top property is a synonym for the top-most Navigator window, which is a "document window" or "Web Browser window."

<H3>Syntax</H3>
<PRE>
1. top.<I>propertyName</I>
2. top.<I>methodName</I>
3. top.<I>frameName</I>
4. top.frames[<I>index</I>]
</PRE>
<P><I>propertyName</I> is defaultStatus, status, or length.
<BR><I>methodName</I> is any method associated with the window object.
<BR><I>frameName</I> and frames[<I>index</I>] are ways to refer to frames.

<H3>Description</H3>
<P>The top property refers to the top-most window that contains frames or nested framesets. Use the top property to refer to this ancestor window.

<P>The top property is read-only. The value of the top property is 
<PRE>     &ltobject <I>objectReference</I>&gt</PRE>
where <I>objectReference</I> is an internal reference.

<H3>Property of</H3>
<P><A HREF=objects.htm#window_object>window</A>

<H3>Examples</H3>
<P>The statement <TT>top.close()</TT> closes the top-most ancestor window.

<P>The statement <TT>top.length</TT> specifies the number of frames contained within the top-most ancestor window. When the top-most ancestor is defined as follows, <TT>top.length</TT> returns 3:
<PRE>
&ltFRAMESET COLS="30%,40%,30%"&gt
&ltFRAME SRC=child1.htm NAME="childFrame1"&gt
&ltFRAME SRC=child2.htm NAME="childFrame2"&gt
&ltFRAME SRC=child3.htm NAME="childFrame3"&gt
&lt/FRAMESET&gt
</PRE>

<P>The following example sets the background color of a frame called <I>myFrame</I> to red. <I>myFrame</I> is a child of the top-most ancestor window.
<PRE>
top.myFrame.document.bgColor="red" 
</PRE>

<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="userAgent_property"><H2>userAgent property</H2></A>
<P>
A string representing the value of the user-agent header sent in the HTTP protocol from client to server.


<H3>Syntax</H3>
<PRE>navigator.userAgent</PRE>

<H3>Description</H3>
<P>Servers use the value sent in the user-agent header to identify the client.

<P>userAgent is a read-only property.


<H3>Property of</H3>
<P><A HREF=objects.htm#navigator_object>navigator</A>

<H3>Examples</H3>
<P>The following example displays userAgent information for the Navigator:
<PRE>document.write("The value of navigator.userAgent is " +
   navigator.userAgent)</PRE>
<P>For Navigator 2.0, this displays the following:
<PRE>The value of navigator.userAgent is Mozilla/2.0 (Win16; I)</PRE>

<H3>See also</H3>
<LI><A HREF=#appName_property>appName</A>, <A HREF=#appVersion_property>appVersion</A>, <A HREF=#appCodeName_property>appCodeName</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="value_property"><H2>value property</H2></A>
<P>
A string that is related to the VALUE attribute of its object.

<H3>Syntax</H3>
<PRE>
1. <I>objectName</I>.value
2. <I>radioName</I>[<I>index</I>].value
3. <I>selectName</I>.options.[<I>index</I>].value
</PRE>
<P><I>objectName</I> is either the value of the NAME attribute of a hidden, password, text, textarea, button, reset, submit or checkbox object or an element in the <I>elements</I> array.
<BR><I>radioName</I> is the value of the NAME attribute of a radio object.
<BR><I>selectName</I> is either the value of the NAME attribute of a select object or an element in the <I>elements</I> array.
<BR><I>index</I> is an integer representing a radio button in a radio object or an option in a select object.

<H3>Description</H3>
<P>The value property differs for every object.

<H4>hidden, text, and textarea objects</H4>
The value property is a string that initially reflects the VALUE attribute. This string is displayed in the text and textarea fields. The value of this property changes when a user or a program modifies the field.

<P>You can set the value property at any time. The display of the text and textarea objects updates immediately when you set the value property.

<H4>password object</H4>
<P>The value property is a string that initially reflects the VALUE attribute. This string is represented by asterisks in the password object field. The value of this property changes when a user or a program modifies the field, but the value is always displayed as asterisks.

<P>If you programatically set the value property and then evaluate it, JavaScript returns the current value. If a user interactively modifies the value in the password field, you cannot evaluate it accurately for security reasons.

<H4>button, reset, and submit objects</H4>
<P>When a VALUE attribute is specified in HTML, the value property is a string that reflects it. This string is displayed on the face of the button.

<P>When a VALUE attribute is not specified in HTML, the value property differs for each object:
<LI>For button, it is an empty string
<LI>For reset, it is the string "Reset"
<LI>For submit, it is the string "Submit Query"

<P>These strings are displayed on the faces of the buttons.

<P>value is a read-only property.

<P>Do not confuse the value property with the name property. The name property is not displayed onscreen; it is used to reference the objects programatically.

<H4>options array</H4>
<P>The value property is a string that initially reflects the VALUE attribute. The value of this property can change when a program modifies it. The value property is not displayed onscreen, but is returned to the server if the option is selected.

<P>You can set the value property at any time.

<P>Do not confuse the value property with the selection state of the select object or the text that is displayed as an option. The selected and selectedIndex properties determine which options are selected, and the defaultSelected property determines the default selection state. The text that is displayed in each option is specified by its text property.

<H4>checkbox and radio objects</H4>
<P>When a VALUE attribute is specified in HTML, the value property is a string that reflects it. When a VALUE attribute is not specified in HTML, the value property is a string that evaluates to "on". The value property is not displayed onscreen, but is returned to the server if the radio button or checkbox is selected.

<P>You can set the value property at any time.

<P>Do not confuse the value property with the selection state of the object or the text that is displayed next to each checkbox and radio button. The checked property determines the selection state of the object, and the defaultChecked property determines the default selection state. The text that is displayed is specified following the &ltINPUT TYPE="checkbox"&gt or the &ltINPUT TYPE="radio"&gt tag.

<H3>Property of</H3>
<LI><A HREF=objects.htm#button_object>button</A>, <A HREF=objects.htm#checkbox_object>checkbox</A>, <A HREF=objects.htm#hidden_object>hidden</A>, <A HREF=objects.htm#password_object>password</A>, <A HREF=objects.htm#radio_object>radio</A>, <A HREF=objects.htm#reset_object>reset</A>, <A HREF=objects.htm#submit_object>submit</A>, <A HREF=objects.htm#text_object>text</A>, <A HREF=objects.htm#textarea_object>textarea</A> objects
<LI><A HREF=objects.htm#select_object>options</A> array

<H3>Examples</H3>
<P>The following function evaluates the value property of a group of buttons and displays it in the <I>msgWindow</I> window:
<PRE>
function valueGetter() {
   var msgWindow=window.open("")
   msgWindow.document.write("submitButton.value is " +
      document.valueTest.submitButton.value + "&ltBR&gt")
   msgWindow.document.write("resetButton.value is " +
      document.valueTest.resetButton.value + "&ltBR&gt")
   msgWindow.document.write("helpButton.value is " +
      document.valueTest.helpButton.value + "&ltBR&gt")
   msgWindow.document.close()
}
</PRE>

<P>This example displays the following values:
<PRE>
Query Submit
Reset
Help
</PRE>

<P>The previous example assumes the buttons have been defined as follows
<PRE>
&ltINPUT TYPE=submit NAME="submitButton"&gt
&ltINPUT TYPE=reset NAME="resetButton"&gt
&ltINPUT TYPE=button NAME="helpButton" VALUE="Help"&gt
</PRE>

<P>The following function evaluates the value property of a group of radio buttons and displays it in the <I>msgWindow</I> window:
<PRE>
function valueGetter() {
   var msgWindow=window.open("")
   for (var i = 0; i < document.valueTest.radioObj.length; i++) {
       msgWindow.document.write
          ("The value of radioObj[" + i + "] is " +
          document.valueTest.radioObj[i].value +"&ltBR&gt")
   }
   msgWindow.document.close()
}
</PRE>

<P>This example displays the following values:
<PRE>
on
on
on
on
</PRE>

<P>The previous example assumes the buttons have been defined as follows
<PRE>
&ltBR&gt&ltINPUT TYPE="radio" NAME="radioObj"&gtR&B
&ltBR&gt&ltINPUT TYPE="radio" NAME="radioObj" CHECKED&gtSoul
&ltBR&gt&ltINPUT TYPE="radio" NAME="radioObj"&gtRock and Roll
&ltBR&gt&ltINPUT TYPE="radio" NAME="radioObj"&gtBlues
</PRE>

<H3>See also</H3>
<P>For hidden, password, text, and textarea:
<LI><A HREF=#defaultValue_property>defaultValue</A> property

<P>For button, reset, and submit:
<LI><A HREF=#name_property>name</A> property

<P>For options array:
<LI><A HREF=#defaultSelected_property>defaultSelected</A>, <A HREF=#selected_property>selected</A>, <A HREF=#selectedIndex_property>selectedIndex</A>, <A HREF=#text_property>text</A> properties

<P>For checkbox and radio:
<LI><A HREF=#checked_property>checked</A>, <A HREF=#defaultChecked_property>defaultChecked</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="vlinkColor_property"><H2>vlinkColor property</H2></A>
<P>
A string specifying the color of visited links.

<H3>Syntax</H3>
<PRE>document.vlinkColor</PRE>

<H3>Description</H3>
<P>The vlinkColor property is expressed as a hexadecimal RGB triplet or as one of the string literals listed in <A HREF=colors.htm>Color Values</A>. This property is the JavaScript reflection of the VLINK attribute of the &ltBODY&gt tag. The default value of this property is set by the user on the Colors tab of the Preferences dialog box, which is displayed by choosing General Preferences from the Options menu. You cannot set this property after the HTML source has been through layout.

<P>If you express the color as a hexadecimal RGB triplet, you must use the format rrggbb. For example, the hexadecimal RGB values for salmon are red=FA, green=80, and blue=72, so the RGB triplet for salmon is "FA8072".

<P>
<H3>Property of</H3>
<P><A HREF=objects.htm#document_object>document</A>

<H3>Examples</H3>
<P>The following example sets the color of visited links to aqua using a string literal:
<PRE>
document.vlinkColor="aqua"
</PRE>
<P>The following example sets the color of active links to aqua using a hexadecimal triplet:
<PRE>
document.vlinkColor="00FFFF"
</PRE>


<H3>See also</H3>
<LI><A HREF=#alinkColor_property>alinkColor</A>, <A HREF=#bgColor_property>bgColor</A>, <A HREF=#fgColor_property>fgColor</A>, and <A HREF=#linkColor_property>linkColor</A> properties
<!------------------------------------------------------------------------------------------------->
<HR>
<A NAME="window_property"><H2>window property</H2></A>
<P>
The window property is a synonym for the current window or frame.

<H3>Syntax</H3>
<PRE>
1. window.<I>propertyName</I>
2. window.<I>methodName</I>
</PRE>
<P><I>propertyName</I> is the defaultStatus, status, length, or name property when the calling window refers to a window object.
<BR><I>propertyName</I> is the length or name property when the calling window refers to a frame object.
<BR><I>methodName</I> is any method associated with the window object.

<H3>Description</H3>
<P>The window property refers to the current window or frame.

<P> Although you can use the window property as a synonym for the current frame, your code is more readable if you use the self property. For example, <TT>window.name</TT> and <TT>self.name</TT> both specify the name of the current frame, but <TT>self.name</TT> is easier to understand.

<P>Use the window property to disambiguate a property of the window object from a form or form element of the same name. You can also use the window property to make your code more readable.

<P>The window property is read-only. The value of the window property is 
<PRE>     &ltobject <I>nameAttribute</I>&gt</PRE>
where <I>nameAttribute</I> is the NAME attribute if window refers to a frame, or an internal reference if window refers to a window.

<H3>Property of</H3>
<P><A HREF=objects.htm#frame_object>frame</A>, <A HREF=objects.htm#window_object>window</A>

<H3>Examples</H3>
<P>In the following example, <TT>window.status</TT> is used to set the status property of the current window. This usage disambiguates the status property of the current window from a form called "status" within the current window.
<XMP><A HREF=""
   onClick="this.href=pickRandomURL()"
   onMouseOver="window.status='Pick a random URL' ; return true">
Go!</A></XMP>


<H3>See also</H3>
<LI><A HREF=#self_property>self</A> property
<!------------------------------------------------------------------------------------------------->

<HR>
<SCRIPT>
document.write("<FONT SIZE=-2>Last modified " + document.lastModified)
</SCRIPT>
</BODY>
</HTML>


